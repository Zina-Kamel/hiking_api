{"version":3,"sources":["img/spinner.gif","img/bllogo.PNG","components/ui/Header.js","components/Trails/TrailItem.js","components/ui/Spinner.js","components/Trails/TrailGrid.js","components/ui/Search.js","components/ui/LocationDropdown.js","App.js","index.js"],"names":["module","exports","Header","className","TrailItem","item","src","imgMedium","alt","href","url","target","name","conditionDetails","difficulty","length","location","stars","summary","Spinner","spinner","style","width","margin","display","TrailGrid","items","isLoading","trails","map","key","id","Search","filterItemsFunction","useState","text","setText","type","placeholder","value","onChange","e","q","autoFocus","LocationDropdown","locationCallback","setLoc","App","toFixed","num","fixed","re","RegExp","toString","match","navigator","geolocation","getCurrentPosition","position","console","log","coords","longitude","latitude","setItems","setIsLoading","savedItems","setSavedItems","fetchItems","a","lat","long","axios","result","data","useEffect","results","filter","toLowerCase","includes","backgroundColor","loc","split","trim","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d228a01.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.235b9b3e.gif\";","module.exports = __webpack_public_path__ + \"static/media/bllogo.2999bd94.PNG\";","import React from 'react'\nimport hiking from '../../img/bllogo.PNG'\n\nconst Header = () => {\n  return (\n    <header className='center'>\n      {/* <img src={hiking} alt='' /> */}\n      <br></br>\n      <div>Find the nearest local hiking trail and save the your health and planet!</div>\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\n\nconst TrailItem = ({ item }) => {\n  return (\n    <div className='card'>\n      <div className='card-inner'>\n        <div className='card-front'>\n          <img src={item.imgMedium} alt='' />\n        </div>\n        <div className='card-back'>\n        <h1> <a href={item.url !== null ? item.url : \"#\"} target=\"_blank\">{item.name}</a> </h1>\n          <ul>\n            <li>\n              <strong>Condition Details:</strong> {item.conditionDetails}\n            </li>\n            <li>\n              <strong>Difficulty:</strong> {item.difficulty}\n            </li>\n            <li>\n              <strong>length:</strong> {item.length}\n            </li>\n            <li>\n              <strong>location:</strong> {item.location}\n            </li>\n            <li>\n              <strong>stars:</strong> {item.stars}\n            </li>\n            <li>\n              <strong>summary:</strong> {item.summary}\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TrailItem\n","import React from 'react'\nimport spinner from '../../img/spinner.gif'\n\nconst Spinner = () => {\n  return (\n    <img\n      src={spinner}\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\n      alt='Loading'\n    />\n  )\n}\n\nexport default Spinner\n","import React from 'react'\nimport TrailItem from './TrailItem'\nimport Spinner from '../ui/Spinner'\n\n\nconst TrailGrid = ({ items, isLoading }) => {\n  return isLoading ? (\n    <Spinner/>\n  ) : (\n    <section className='cards'>\n      {items.trails.map((item) => (\n        <TrailItem key={item.id} item={item}></TrailItem>\n      ))}\n    </section>\n  )\n}\n\nexport default TrailGrid\n","import React, { useState } from \"react\";\n\nconst Search = ({ filterItemsFunction }) => {\n  const [text, setText] = useState(\"\");\n\n  const onChange = (q) => {\n    setText(q);\n    filterItemsFunction(q);\n  };\n\n  return (\n    <section className=\"search\">\n      <form>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Search trails\"\n          value={text}\n          onChange={(e) => onChange(e.target.value)}\n          autoFocus\n        />\n      </form>\n    </section>\n  );\n};\n\nexport default Search;\n","import React, { useState } from \"react\";\n\nconst LocationDropdown = ({ locationCallback }) => {\n  const [loc, setLoc] = useState(\"\");\n\n  const onChange = (q) => {\n    setLoc(q);\n    locationCallback(q);\n  };\n\n\n\n  return (\n    <select className= \"dropDown\"\n      name=\"locations\"\n      id=\"locations\"\n      onChange={(e) => onChange(e.target.value)}\n    >\n      <option value=\"{lat}, {long}\">Current location</option>\n      <option value=\"40.71, -74.00\">New York City</option>\n      <option value=\"34.05, -118.24\">Los Angeles</option>\n      <option value=\"47.6062, -122.3321\">Seattle</option>\n      <option value=\"40.367474, -82.996216\">Ohio</option>\n      <option value=\"\t32.318230, -86.902298\">Alabama</option>\n      <option value=\"\t66.160507, -153.369141\">Alaska</option>\n      <option value=\"\t32.318230, -86.902298\">Alabama</option>\n      <option value=\"\t41.1529, 20.1606\">Albania</option>\n      <option value=\"\t55.000000, -115.000000\">Alberta</option>\n      <option value=\"\t-15.7500, -47.9500\">Brazil</option>\n      <option value=\"\t26.820553, 30.802498\">Egypt</option>\n      <option value=\"\t31.963158, 35.930359\">Lebanon</option>\n      \n    </select>\n  );\n};\n\nexport default LocationDropdown;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Header from \"./components/ui/Header\";\nimport TrailGrid from \"./components/Trails/TrailGrid\";\nimport Search from \"./components/ui/Search\";\nimport LocationDropdown from \"./components/ui/LocationDropdown\";\nimport \"./App.css\";\n\nconst App = () => {\n  let long;\n  let lat;\n\n  function toFixed(num, fixed) {\n    var re = new RegExp(\"^-?\\\\d+(?:.\\\\d{0,\" + (fixed || -1) + \"})?\");\n    return num.toString().match(re)[0];\n  }\n\n  if (navigator.geolocation) {\n    //getting longitude, latitude and id values from position to use then in api link\n    navigator.geolocation.getCurrentPosition((position) => {\n      console.log(position);\n      long = toFixed(position.coords.longitude, 2);\n      lat = toFixed(position.coords.latitude, 2);\n    });\n  }\n\n  const [items, setItems] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [savedItems, setSavedItems] = useState([]);\n\n  const filterItems = (text) => {\n    if (text === \"\") {\n      setItems(savedItems);\n    } else {\n      const results = {\n        trails: savedItems.trails.filter(\n          (item) =>\n            item.name.toLowerCase().includes(text.toLowerCase()) ||\n            item.difficulty.toLowerCase().includes(text.toLowerCase())\n        ),\n      };\n      setItems(results);\n    }\n  };\n\n  const updateLocation = (loc) => {\n    const latitude = loc.split(\",\")[0].trim();\n    const longitude = loc.split(\",\")[1].trim();\n    console.log(latitude);\n    console.log(longitude);\n    fetchItems(latitude, longitude);\n    //TODO: create state variables for latitude and longitude, and call the hiking API again inside this function\n  };\n\n  const fetchItems = async (lat = \"40.0274\", long = \"-105.2519\") => {\n    setIsLoading(true);\n    let url = `https://www.hikingproject.com/data/get-trails?lat=${lat}&lon=${long}&maxDistance=200&key=200923231-086a9d74cb89edf74abd661a784b01f4`;\n    let hikingUrl = `https://www.hikingproject.com/data/get-trails?lat=40.0274&lon=-105.2519&maxDistance=200&key=200923231-086a9d74cb89edf74abd661a784b01f4`;\n    const result = await axios(url);\n\n    console.log(result.data);\n\n    setItems(result.data);\n    setSavedItems(result.data);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    fetchItems();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <Header />\n      <Search filterItemsFunction={filterItems} />\n      <LocationDropdown style={{backgroundColor: \"red\"}} locationCallback={updateLocation} />\n      <TrailGrid isLoading={isLoading} items={items} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}